[project]
name = "emissary"
version = "4.0.0-dev"
readme = "python/README.md"
requires-python = "==3.11.*"
description = "ADD DESCRIPTION HERE"
license = { file = "LICENSE" }
authors = [
    { name = "datawire.io", email = "dev@datawire.io" },
]
maintainers = [
    { name = "Flynn", email = "not-today-satan@no-spam-thnx.org" },
]
keywords = [
    "envoy",
    "ambassador",
    "kubernetes",
    "api gateway",
    "microservices",
]
classifiers = [
    "Framework :: Flask",
    "Framework :: Hatch",
    "Framework :: OpenTelemetry",
    "Programming Language :: Go",
    "Topic :: System :: Networking",
    "Intended Audience :: Developers",
    "Environment :: Other Environment",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Intended Audience :: System Administrators",
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: Apache Software License",
]


[project.urls]
homepage = "https://www.getambassador.io"
repository = "https://github.com/emissary-ingress/emissary"
documentation = "https://www.getambassador.io/docs/emissary"


#[project.entry-points]
#console_scripts = { diagd = "ambassador_diag.diagd:main" }


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.uv]
cache-dir = ".uv_cache"
link-mode = "symlink"
managed = true
native-tls = false
python-downloads = "automatic"
python-preference = "only-managed"
upgrade-package = []  # ref: https://docs.astral.sh/uv/reference/settings/#upgrade-package
dev-dependencies = [
    # Project-Specific
    "kat==4.*",
    "tests==4.*",
    "ambassador==4.*",
    "ambassador-diag==4.*",
    # Dev Requirements
    "mypy>=1",
    "retry2>=0.9",
    "pytest==8.*",
    "pexpect>=4.9",
    "packaging>=24",
    "httpretty>=1.1",
    "gitpython>=3.1",
    "pyopenssl>=24.2",
    "pytest-cov>=5.0",
    "pytest-rerunfailures>=14",
    # Type Stubs
    "types-orjson>=3",
    "types-pyyaml>=6",
    "types-retry>=0.9",
    "types-protobuf>=5",
    "types-requests>=2",
    "types-pyopenssl>=24",
    "types-setuptools>=71",
]

[tool.uv.sources]
kat = { workspace = true, editable = true }
tests = { workspace = true, editable = true }
ambassador = { workspace = true, editable = true }
ambassador-diag = { workspace = true, editable = true }


[tool.uv.workspace]
members = [
    "python/kat",
    "python/tests",
    "python/ambassador",
    "python/ambassador-diag",
]


[tool.hatch.build]
packages = [
    "python/ambassador",
    "python/ambassador-diag",
]


[tool.ruff]
fix = true
preview = false
indent-width = 4
line-length = 100
src = [
    "python/kat",
    "python/tests",
    "python/ambassador",
    "python/ambassador-diag",
]
output-format = "full"
target-version = "py311"
cache-dir = ".ruff_cache"
respect-gitignore = false
required-version = ">=0.5.5"


[tool.uv.pip]
strict = true
system = false
python = "3.11"
all-extras = true
# config-settings = {}
require-hashes = true
python-version = "3.11"
break-system-packages = false
allow-empty-requirements = true
# custom-compile-command = ""


[tool.ruff.lint]
unfixable = []
preview = false
explicit-preview-rules = true
logger-objects = ["loguru.Logger"]


[tool.ruff.format]
preview = false
line-ending = "auto"
indent-style = "space"
quote-style = "double"
docstring-code-format = true
skip-magic-trailing-comma = false
docstring-code-line-length = "dynamic"


[tool.ruff.lint.isort]
sections = {}  # ref: https://docs.astral.sh/ruff/settings/#lint_isort_sections
from-first = false
length-sort = false
no-sections = false
order-by-type = true
known-local-folder = [
    "kat",
    "tests",
    "ambassador",
    "ambassador_diag",
]
lines-after-imports = 2
lines-between-types = 1
combine-as-imports = true
force-single-line = false
force-wrap-aliases = true
detect-same-package = true
length-sort-straight = false
split-on-trailing-comma = true
default-section = "third-party"
force-sort-within-sections = true
relative-imports-order = "furthest-to-closest"
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]


[tool.ruff.lint.mccabe]
max-complexity = 5


[tool.ruff.lint.pylint]
allow-magic-value-types = []  # no "magic" values allowed
allow-dunder-method-names = ["__tablename__", "__table_args__"]


[tool.ruff.lint.pyupgrade]
keep-runtime-typing = false


[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.ruff.lint.flake8-quotes]
avoid-escape = true
inline-quotes = "double"
docstring-quotes = "double"
multiline-quotes = "double"



[tool.ruff.lint.flake8-annotations]
mypy-init-return = false
allow-star-arg-any = false
suppress-dummy-args = false
ignore-fully-untyped = false
suppress-none-returning = false


[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"


[tool.ruff.lint.flake8-type-checking]
strict = false

