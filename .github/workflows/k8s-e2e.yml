---
name: k8s-e2e

"on":
  pull_request: { }
  schedule:
    - cron: 0 7 * * *  # at 7am UTC everyday
  workflow_dispatch:

jobs:
  acceptance_tests:
    runs-on: ubuntu-latest
    env:
      # See pkg/kubeapply/resource_kubeapply.go
      DEV_USE_IMAGEPULLSECRET: ${{ secrets.DEV_USE_IMAGEPULLSECRET }}
      DOCKER_BUILD_USERNAME: ${{ secrets.GH_DOCKER_BUILD_USERNAME }}
      DOCKER_BUILD_PASSWORD: ${{ secrets.GH_DOCKER_BUILD_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        k8s:
          - k3s: 1.26.9+k3s1
            kubectl: 1.26.9
          - k3s: 1.27.6+k3s1
            kubectl: 1.27.6
          - k3s: 1.28.2+k3s1
            kubectl: 1.28.2
        test:
          - integration-tests
          - kat-envoy3-tests-1-of-5
          - kat-envoy3-tests-2-of-5
          - kat-envoy3-tests-3-of-5
          - kat-envoy3-tests-4-of-5
          - kat-envoy3-tests-5-of-5
    name: ${{matrix.k8s.kubectl}}-${{ matrix.test }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Deps
        uses: ./.github/actions/setup-deps
      - name: Docker Login
        uses: docker/login-action@v3
        if: ${{ env.should_run }}
        env:
          should_run: ${{ (secrets.GH_DOCKER_RELEASE_USERNAME != '') && (secrets.GH_DOCKER_RELEASE_TOKEN != '') }}
        with:
          registry: ${{ (!startsWith(secrets.RELEASE_REGISTRY, 'docker.io/')) && secrets.RELEASE_REGISTRY || null }}
          username: ${{ secrets.GH_DOCKER_RELEASE_USERNAME }}
          password: ${{ secrets.GH_DOCKER_RELEASE_TOKEN }}
      - name: Create integration test cluster
        env:
          K3S_VERSION: ${{matrix.k8s.k3s}}
          KUBECTL_VERSION: ${{matrix.k8s.kubectl}}
        run: |
          sudo sysctl -w fs.file-max=1600000
          sudo sysctl -w fs.inotify.max_user_instances=4096

          make ci/setup-k3d
      - name: Setup integration test environment
        env:
          KAT_REQ_LIMIT: 900
          DEV_KUBE_NO_PVC: "yes"
          DEV_KUBECONFIG: ~/.kube/config
          DEV_REGISTRY: ${{ secrets.DEV_REGISTRY || vars.DEV_REGISTRY }}
        run: |
          make python-integration-test-environment
      - name: Run ${{ matrix.test }}
        env:
          KAT_REQ_LIMIT: 900
          DEV_KUBE_NO_PVC: "yes"
          DEV_KUBECONFIG: ~/.kube/config
          DEV_REGISTRY: ${{ secrets.DEV_REGISTRY || vars.DEV_REGISTRY }}
        run: |
          make pytest-${{ matrix.test }}
      - uses: ./.github/actions/after-job
        if: always()
        with:
          jobname: check-pytest-${{ matrix.test }}
